---
description: 
globs: 
alwaysApply: true
---
# 공통 개발 규칙

---
- **모든 응답과 설은 한국어로 작성한다.**
- **모든 패키지 관련 명령어는 'pnpm' 으로 진행한다.**
- 코드 어시스트를 할 때 다른 문서를 참고해야 하는 경우에는 항상 'Context7 MCP' 서버를 사용한다.
- 모든 구문은 한줄씩 띄어서 작성해야 한다. 구문과 구문 사이에 공백이 있어야 한다.
- 에러메시지는 반드시 한국어로 작성해야 한다.
- 사용자가 여러개의 태스크를 요청했을 때 사용자에게 다음으로 진행할 것을 확인하지말고 곧바로 진행한다.
- **JS/TS의 경우 export 시에는 'export { 컴포넌트 } from ...' 형식을 사용한다. (export * from ... 금지)**
- **임포트시에는 반드시 @ 알리아스를 사용한다.**

---

## 파일 이름 및 폴더 구조 규칙

- 파일 이름은 일반적으로 kebab-case(예: post-list.tsx, user-profile.ts)로 작성한다.
- React 컴포넌트 파일은 PascalCase(예: PostCard.tsx, UserAvatar.tsx)로 작성할 수 있다.
- 폴더 이름은 kebab-case를 원칙으로 한다. 단, app 폴더 바로 아래에 있는 8개 폴더는 이 규칙에서 제외로 한다.

[app/_data 폴더]
- 프로젝트에 필요한 작은 데이터들은 /app/_data 폴더에 저장한다. index.ts 파일을 두고 내부 데이터들을 명시적으로 export 한다. 파일 이름은 <name>.data.ts 이다.

[app/_entities 폴더]
- /app/_entities 폴더에는 프로젝트의 각 자원별로 index.ts / <자원>.api.ts / <자원>.store.ts / <자원>.keys.ts / <자원>.types.ts / hooks 폴더 를 두고 파일들을 관리한다.
- 각 기능별로 hooks, types, api, store, keys 등 하위 폴더/파일을 명확히 분리한다.
- <자원>.table.ts 는 드리즐 ORM을 위한 파일이다.

[app/_components 폴더]
- _components 폴더에는 각 라우트별로 필요한 컴포넌트를 저장된다. 라우트는 폴더로 구분한다.

[app/_routes 폴더]
- _routes 폴더에는 `app/routes.ts` 에 명시된 대로 파일명으로 라우트가 생성되기 위한 파일들이 존재하며 각각의 파일들이 하나의 페이지가 된다.

[app/_styles 폴더]
- css 파일 혹은 scss 파일이 위치하는 폴더이다.

[app/_config 폴더]
- 사이트의 설정 파일 혹은 다른 설정 파일이 위치하는 폴더이다. <name>.config.ts 형식으로 파일을 작성하고 index.ts 파일에 명시적으로 export 한다.

[app/_icons 폴더]
- 프로젝트에 사용할 svg 컴포넌트들이 위치하는 폴더이다. icones 에서 받아오거나 직접 생성해서 저장한다. index.ts 파일에 명시적으로 export 한다.

[app/_libs 폴더]
- 프로젝트에 사용되는 유틸 함수들을 저장하는 폴더이다. 이 폴더 안에 tools 라는 유틸 모음이 있다. index.ts 파일에 명시적으로 export 한다.

---

> 이 규칙은 파일/폴더 네이밍 및 구조의 일관성을 통해 유지보수성과 협업 효율을 높이기 위한 가이드입니다.